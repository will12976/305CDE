exports.addNew = function(auth, body) {
  console.log('addNew')
  /* The first parameter should contain the authorization data. We check that it contains an object called 'basic' */
  if (auth.basic === undefined) {
    return {code: 401, contentType:'application/json', response:{ status:'error', message:'missing basic auth' }}
  }
  /* In this simple example we have hard-coded the username and password. You should be storing this somewhere are looking it up. */
  if (auth.basic.username !== 'testuser' || auth.basic.password !== 'p455w0rd') {
    return {code: 401, contentType:'application/json', response:{ status:'error', message:'invalid credentials' }}
  }
  /* The second parameter contains the request body as a 'string'. We need to turn this into a JavaScript object then pass it to a function to check its structure. */
  const json = JSON.parse(body)
  const valid = validateJson(json)
  /* If the 'validateJson()' function returns 'false' we need to return an error. */
  if (valid === false) {
    return {code: 400 ,contentType:'application/json', response:{ status:'error', message:'JSON data missing in request body' }}
  }
  /* In this example we use the csprng module to generate a long random string. In a production system this might be generated by the chosen data store. */
  const newId = rand(160, 36)
  /* We now create an object and push it onto the array. */
  const newList = {id: newId, name:  json.name, list: json.list}
  lists.push(newList)
  /* And return a success code. */
  return {code: 201, contentType:'application/json', response:{ status:'success', message:'new list added', data: newList }}
}
